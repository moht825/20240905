#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

#define SIZE 5


// 함수 정의
// 오름차순 정렬 함수
void sort_ascending(int arr[], int size)
{
    int i, j, temp;
    for (i = 0; i < size - 1; i++)
    {
        for (j = i + 1; j < size; j++)
        {
            if (arr[i] > arr[j])
            {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}

// 내림차순 정렬 함수
void sort_descending(int arr[], int size)
{
    int i, j, temp;
    for (i = 0; i < size - 1; i++)
    {
        for (j = i + 1; j < size; j++)
        {
            if (arr[i] < arr[j])
            {
                temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }
}


// main 문
int main(void)
{
    int num[SIZE];
    FILE* file;
    int i;

    // 파일에서 숫자를 읽음
    file = fopen("input.txt", "r");
    if (file == NULL)
    {
        perror("파일을 열 수 없습니다");
        return 1;
    }

    for (i = 0; i < SIZE; i++)
    {
        if (fscanf(file, "%d", &num[i]) != 1)
        {
            perror("파일에서 숫자를 읽는 데 실패했습니다");
            fclose(file);
            return 1;
        }
    }
    fclose(file);

    // 오름 차순 정렬
    sort_ascending(num, SIZE);

    // 결과를 'ascending_order.txt' 파일에 저장
    file = fopen("ascending_order.txt", "w");

    if (file == NULL)
    {
        perror("파일을 열 수 없습니다");
        return 1;
    }

    fprintf(file, "%d ", num[0]);

    for (i = 1; i < SIZE; i++)
    {
        fprintf(file, "%d ", num[i]);
    }

    fclose(file);

    // 오름 차순 정렬 결과 출력
    printf("오름차순 정렬 결과: ");

    for (i = 0; i < SIZE; i++)
    {
        printf("%d ", num[i]);
    }
    printf("\n");


    // 내림 차순 정렬
    sort_descending(num, SIZE);

    // 결과를 'descending_order.txt' 파일에 저장
    file = fopen("descending_order.txt", "w");

    if (file == NULL)
    {
        perror("파일을 열 수 없습니다");
        return 1;
    }

    fprintf(file, "%d ", num[0]);

    for (i = 1; i < SIZE; i++)
    {
        fprintf(file, "%d ", num[i]);
    }

    fclose(file);

    // 내림 차순으로 정렬된 결과 출력
    printf("내림차순 정렬 결과: ");

    for (i = 0; i < SIZE; i++)
    {
        printf("%d ", num[i]);
    }
    printf("\n");

    return 0;
}
